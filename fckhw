import java.util.ArrayList;

/**
 * An app store containing apps
 * 
 * Modifications:
 * CT: Create AppStore with a list of apps and basic methods to add, clear, and print apps
 *
 * @author Cara Tang and Christina Murray
 * @version 2018.11.19
 */
public class AppStore
{
    private String appStoreName;
    private ArrayList<App> appList;
    
    /**
     * Create an app store with the given name
     * @param name the name of this app store
     */
    public AppStore(String name)
    {
        appStoreName = name;
        appList = new ArrayList<App>();
    }
    
    /**
     * Added 3 more applications to the original list.
     * Use this method to make testing easier. After creating an AppStore,
     * call this method to populate the apps, and then test your methods.
     */
    public void populateApps()
    {
        addApp("Pandora Music", "Pandora", 0);
        addApp(new App("Minecraft", "Mojang", 6.99, 3));
        addApp(new App("Amazon", "Amazon", 0, 4));
        addApp(new App("Spotify Music", "Spotify", 0, 4));
        addApp(new App("Words with Friends", "Zynga", 0, 3));
    }
    
    /**
     * Add the given app to the app store
     * @param anApp an app to add
     */
    public void addApp(App anApp)
    {
        appList.add(anApp);
    }
    
    /**
     * Create an app with the given name, author, and price and add it to the store.
     * The app starts out unrated.
     * @param name name of the app
     * @param author the app author
     * @param price the price of the app
     */
    public void addApp(String name, String author, double price)
    {
        appList.add(new App(name, author, price));
    }
    
    /**
     * @return the number of apps in the store
     */
    public int getNumberOfApps()
    {
        return appList.size();
    }
    
    /**
     * Removes all the apps from the store
     */
    public void clearAppStore()
    {
        appList.clear();
    }
    
    /**
     * Print all the apps in the store
     */
    public void printAppList()
    {
        System.out.println("============= " + appStoreName + " =============");
        if (appList.size() == 0) {
            System.out.println("No apps in the store");
        }
        else {
            for (App currentApp : appList) {
                currentApp.printAppInfo();
            }
        }
        System.out.println("===========================================");
    }

    /**
     * Find an app based on its name
     * @param name the name of the app to search for
     * @return the app with the given name
     *         or null if there is no app with that name
     */
    public App findApp(String name)
    {
       for (App currentApp : appList) {
           String applicationName =currentApp.getTitle()
           if (currentApp.equals(name)) {
               return name;
            }
            else {
                return -1;
            }
       }
     }
